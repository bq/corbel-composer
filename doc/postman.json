{
    "id": "832ae8cb-ad4f-51fd-9864-e98625805d3f",
    "name": "corbel-composer",
    "description": "An example collection for corbel-composer usage",
    "order": [
        "dc760424-dc1f-1075-4cd5-460dbcb9c0c3",
        "e0b128bf-f9e3-7cbf-18d1-f220d09313c6",
        "09817e10-8d7d-1c64-b1e5-163539b7dcbe",
        "c4494d9a-aa2c-3c41-d8bf-6ca50887b1e6",
        "5563dc31-1a8b-a64e-d0d1-0d8ee07700dc",
        "572cadd9-2139-0c52-c060-eca374f6c6ce",
        "59b53ece-6932-f0c3-e2ba-8a288b907de2"
    ],
    "folders": [],
    "timestamp": 1427795539820,
    "synced": false,
    "owner": "43451",
    "sharedWithTeam": false,
    "subscribed": false,
    "public": false,
    "write": true,
    "requests": [
        {
            "id": "09817e10-8d7d-1c64-b1e5-163539b7dcbe",
            "headers": "Authorization: Bearer YOUR_ACCESS_TOKEN\n",
            "url": "{{composerEndpoint}}phrase",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "GET",
            "data": [],
            "dataMode": "params",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1429028344572,
            "name": "2- Get all phrases",
            "description": "Retrieves all created phrases",
            "collectionId": "832ae8cb-ad4f-51fd-9864-e98625805d3f",
            "responses": [],
            "synced": false,
            "owner": "43451"
        },
        {
            "id": "5563dc31-1a8b-a64e-d0d1-0d8ee07700dc",
            "headers": "Authorization: Bearer YOUR_ACCESS_TOKEN\nContent-Type: application/json\n",
            "url": "{{composerEndPoint}}phrase/:phraseId",
            "preRequestScript": "",
            "pathVariables": {
                "phraseId": ""
            },
            "method": "DELETE",
            "data": [],
            "dataMode": "raw",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1432047323128,
            "name": "4- Delete phrase",
            "description": "Removes a phrase",
            "collectionId": "832ae8cb-ad4f-51fd-9864-e98625805d3f",
            "responses": [],
            "synced": false,
            "rawModeData": ""
        },
        {
            "id": "572cadd9-2139-0c52-c060-eca374f6c6ce",
            "headers": "",
            "url": "{{composerEndpoint}}doc/:domain",
            "preRequestScript": "",
            "pathVariables": {
                "domain": ""
            },
            "method": "GET",
            "data": [],
            "dataMode": "params",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1432047295255,
            "name": "5- Domain phrases documentation",
            "description": "Retrieves all created domain phrases as HTML",
            "collectionId": "832ae8cb-ad4f-51fd-9864-e98625805d3f",
            "responses": [],
            "synced": false
        },
        {
            "id": "59b53ece-6932-f0c3-e2ba-8a288b907de2",
            "headers": "",
            "url": "{{composerEndPoint}}/version",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "GET",
            "data": [],
            "dataMode": "params",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1432047521773,
            "name": "6- Version",
            "description": "Retrieves composer version (not phrases)",
            "collectionId": "832ae8cb-ad4f-51fd-9864-e98625805d3f",
            "responses": [],
            "synced": false
        },
        {
            "id": "c4494d9a-aa2c-3c41-d8bf-6ca50887b1e6",
            "headers": "Authorization: Bearer YOUR_ACCESS_TOKEN\nContent-Type: application/json\n",
            "url": "{{composerEndpoint}}phrase",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "PUT",
            "data": [],
            "dataMode": "raw",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1430899764892,
            "name": "3- Create phrase",
            "description": "## Phrase model\n\n    {\n        \"url\": \"phraseName\",\n        \"get\": {\n            \"code\": \"res.render('index', {title: 'hello world'});\",\n            \"doc\": {\n                \"description\": \"Phrase description\",\n                \"queryParameters\": {\n                    \"param1\": {\n                        \"type\": \"Number\",\n                        \"description\": \"Param description\",\n                        \"default\": 0\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"body\": {\n                            \"application/json\": {\n                                \"schema\": \"{\\n\\t\"$schema\": \"http://json-schema.org/schema\",\\n\\t\"type\": \"object\",\\n\\t\"description\": \"A canonical song\",\\n\\t\"properties\": {\\n\\t\\t\"title\": {\\n\\t\\t\\t\"type\": \"String\"\\n\\t\\t},\\n\\t\\t\"artist\": {\\n\\t\\t\\t\"type\": \"String\"\\n\\t\\t}\\n\\t},\\n\\t\"required\": [\"title\", \"artist\"]\\n}\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n",
            "collectionId": "832ae8cb-ad4f-51fd-9864-e98625805d3f",
            "responses": [],
            "synced": false,
            "rawModeData": "{\n    \"url\": \"phraseName\",\n    \"get\": {\n        \"code\": \"res.render('index', {title: 'hello world'});\",\n        \"doc\": {\n            \"description\": \"Phrase description\",\n            \"queryParameters\": {\n                \"param1\": {\n                    \"type\": \"Number\",\n                    \"description\": \"Param description\",\n                    \"default\": 0\n                }\n            },\n            \"responses\": {\n                \"200\": {\n                    \"body\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"description\": \"A canonical song\",\n                                \"properties\": {\n                                    \"title\": {\n                                        \"type\": \"String\"\n                                    },\n                                    \"artist\": {\n                                        \"type\": \"String\"\n                                    }\n                                },\n                                \"required\": [\"title\", \"artist\"]\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
            "owner": "43451"
        },
        {
            "id": "dc760424-dc1f-1075-4cd5-460dbcb9c0c3",
            "headers": "Content-Type: application/json\n",
            "url": "{{iamEndpoint}}oauth/token",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "POST",
            "data": [
                {
                    "key": "assertion",
                    "value": "JWT_ASSERTION",
                    "type": "text",
                    "enabled": true
                },
                {
                    "key": "grant_type",
                    "value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
                    "type": "text",
                    "enabled": true
                }
            ],
            "dataMode": "urlencoded",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1429028325990,
            "name": "1- Request token (JWT)",
            "description": "Request an accessToken with a JWT assertion\n\n1. In order to generate the JWT assertion, use this [online tool](http://jwt.io/)\n    \n    1. Introduce an example assertion token in `encoded` field\n    2. Introduce this Header for first field in `decoded`\n    \n            {\n                \"typ\": \"JWT\",\n                \"alg\": \"HS256\"\n            }\n    \n    3. Introduce this Payload for second field in `decoded`\n    \n       * Expires = [epoch-time](http://www.epochconverter.com/) + 3600 (1hour)\n            \n                {\n                    \"iss\": \"CLIENT_ID\",\n                    \"aud\": \"http://iam.bqws.io\",\n                    \"exp\": 1427799708,\n                    \"scope\": \"composr:comp:base\"\n                }\n    \n    3. Introduce your secret for third field in `decoded`\n    4. Copy updated `JWT_ASSERTION`\n    \n2. Paste `JWT_ASSERTION` value\n3. Send request\n4. Save `data.accessToken` for next requests\n\n",
            "collectionId": "832ae8cb-ad4f-51fd-9864-e98625805d3f",
            "responses": [],
            "synced": false,
            "owner": "43451"
        },
        {
            "id": "e0b128bf-f9e3-7cbf-18d1-f220d09313c6",
            "headers": "Content-Type: application/json\n",
            "url": "{{iamEndPoint}}/oauth/token",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "POST",
            "data": [],
            "dataMode": "raw",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1432047544113,
            "name": "1- Request token (client-secret)",
            "description": "Request an accessToken with client/secret credentials",
            "collectionId": "832ae8cb-ad4f-51fd-9864-e98625805d3f",
            "responses": [],
            "synced": false,
            "rawModeData": "{\n  \"clientId\": \"CLIENT_ID\",\n  \"clientSecret\": \"CLIENT_SECRET\",\n  \"scopes\":\"composr:comp:base\"\n}"
        }
    ]
}