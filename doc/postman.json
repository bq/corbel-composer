{
    "id": "7ab55767-da04-ddc3-d7c4-8b3aea48813d",
    "name": "corbel-composer",
    "description": "An example collection for corbel-composer usage",
    "order": [
        "76aa9c9a-86d1-3ee3-3ca1-247b5f884679",
        "32b6ab61-37a1-1c54-3366-019f3a766326",
        "d0d675bc-383c-b22c-a660-ee4426fd3043",
        "2b4b585e-b84d-5765-5e1a-a33745856a0d",
        "0e690265-a95d-349e-fe7c-4fc150f1c37f",
        "31570e74-fb6b-4df3-3595-d978504dcaea",
        "7846e577-4438-df31-5fd2-d5a37866da9a"
    ],
    "folders": [],
    "timestamp": 1427795539820,
    "synced": false,
    "owner": 0,
    "sharedWithTeam": false,
    "subscribed": false,
    "remoteLink": "https://www.getpostman.com/collections/2942a69c0bff9c211763",
    "public": false,
    "write": true,
    "requests": [
        {
            "id": "0e690265-a95d-349e-fe7c-4fc150f1c37f",
            "headers": "Authorization: Bearer YOUR_ACCESS_TOKEN\nContent-Type: application/json\n",
            "url": "https://{{composerEndPoint}}/phrase/:phraseId",
            "preRequestScript": "",
            "pathVariables": {
                "phraseId": ""
            },
            "method": "DELETE",
            "data": [],
            "dataMode": "raw",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1429028411354,
            "name": "4- Delete phrase",
            "description": "Removes a phrase",
            "collectionId": "7ab55767-da04-ddc3-d7c4-8b3aea48813d",
            "responses": [],
            "synced": false,
            "rawModeData": "",
            "owner": 0
        },
        {
            "id": "2b4b585e-b84d-5765-5e1a-a33745856a0d",
            "headers": "Authorization: Bearer YOUR_ACCESS_TOKEN\nContent-Type: application/json\n",
            "url": "{{composerEndpoint}}phrase",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "PUT",
            "data": [],
            "dataMode": "raw",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1430899764892,
            "name": "3- Create phrase",
            "description": "## Phrase model\n\n    {\n        \"url\": \"phraseName\",\n        \"get\": {\n            \"code\": \"res.render('index', {title: 'hello world'});\",\n            \"doc\": {\n                \"description\": \"Phrase description\",\n                \"queryParameters\": {\n                    \"param1\": {\n                        \"type\": \"Number\",\n                        \"description\": \"Param description\",\n                        \"default\": 0\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"body\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"description\": \"A canonical song\",\n                                    \"properties\": {\n                                        \"title\": {\n                                            \"type\": \"String\"\n                                        },\n                                        \"artist\": {\n                                            \"type\": \"String\"\n                                        }\n                                    },\n                                    \"required\": [\"title\", \"artist\"]\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n",
            "collectionId": "7ab55767-da04-ddc3-d7c4-8b3aea48813d",
            "responses": [],
            "synced": false,
            "rawModeData": "{\n    \"url\": \"phraseName\",\n    \"get\": {\n        \"code\": \"res.render('index', {title: 'hello world'});\",\n        \"doc\": {\n            \"description\": \"Phrase description\",\n            \"queryParameters\": {\n                \"param1\": {\n                    \"type\": \"Number\",\n                    \"description\": \"Param description\",\n                    \"default\": 0\n                }\n            },\n            \"responses\": {\n                \"200\": {\n                    \"body\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"description\": \"A canonical song\",\n                                \"properties\": {\n                                    \"title\": {\n                                        \"type\": \"String\"\n                                    },\n                                    \"artist\": {\n                                        \"type\": \"String\"\n                                    }\n                                },\n                                \"required\": [\"title\", \"artist\"]\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
            "id": "31570e74-fb6b-4df3-3595-d978504dcaea",
            "headers": "",
            "url": "{{composerEndpoint}}doc",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "GET",
            "data": [],
            "dataMode": "params",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1430930659431,
            "name": "5- Domain phrases documentation",
            "description": "Retrieves all created domain phrases as HTML",
            "collectionId": "7ab55767-da04-ddc3-d7c4-8b3aea48813d",
            "responses": [],
            "synced": false
        },
        {
            "id": "32b6ab61-37a1-1c54-3366-019f3a766326",
            "headers": "Content-Type: application/json\n",
            "url": "https://{{iamEndPoint}}/oauth/token",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "POST",
            "data": [],
            "dataMode": "raw",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1429028316427,
            "name": "1- Request token (client-secret)",
            "description": "Request an accessToken with client/secret credentials",
            "collectionId": "7ab55767-da04-ddc3-d7c4-8b3aea48813d",
            "responses": [],
            "synced": false,
            "rawModeData": "{\n  \"clientId\": \"CLIENT_ID\",\n  \"clientSecret\": \"CLIENT_SECRET\",\n  \"scopes\":\"composr:comp:base\"\n}",
            "owner": 0
        },
        {
            "id": "76aa9c9a-86d1-3ee3-3ca1-247b5f884679",
            "headers": "Content-Type: application/json\n",
            "url": "{{iamEndpoint}}oauth/token",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "POST",
            "data": [
                {
                    "key": "assertion",
                    "value": "JWT_ASSERTION",
                    "type": "text",
                    "enabled": true
                },
                {
                    "key": "grant_type",
                    "value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
                    "type": "text",
                    "enabled": true
                }
            ],
            "dataMode": "urlencoded",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1429028325990,
            "name": "1- Request token (JWT)",
            "description": "Request an accessToken with a JWT assertion\n\n1. In order to generate the JWT assertion, use this [online tool](http://jwt.io/)\n    \n    1. Introduce an example assertion token in `encoded` field\n    2. Introduce this Header for first field in `decoded`\n    \n            {\n                \"typ\": \"JWT\",\n                \"alg\": \"HS256\"\n            }\n    \n    3. Introduce this Payload for second field in `decoded`\n    \n       * Expires = [epoch-time](http://www.epochconverter.com/) + 3600 (1hour)\n            \n                {\n                    \"iss\": \"CLIENT_ID\",\n                    \"aud\": \"http://iam.bqws.io\",\n                    \"exp\": 1427799708,\n                    \"scope\": \"composr:comp:base\"\n                }\n    \n    3. Introduce your secret for third field in `decoded`\n    4. Copy updated `JWT_ASSERTION`\n    \n2. Paste `JWT_ASSERTION` value\n3. Send request\n4. Save `data.accessToken` for next requests\n\n",
            "collectionId": "7ab55767-da04-ddc3-d7c4-8b3aea48813d",
            "responses": [],
            "synced": false,
            "owner": 0
        },
        {
            "id": "7846e577-4438-df31-5fd2-d5a37866da9a",
            "headers": "",
            "url": "https://{{composerEndPoint}}/version",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "GET",
            "data": [],
            "dataMode": "params",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1429028423507,
            "name": "6- Version",
            "description": "Retrieves composer version (not phrases)",
            "collectionId": "7ab55767-da04-ddc3-d7c4-8b3aea48813d",
            "responses": [],
            "synced": false,
            "owner": 0
        },
        {
            "id": "d0d675bc-383c-b22c-a660-ee4426fd3043",
            "headers": "Authorization: Bearer YOUR_ACCESS_TOKEN\n",
            "url": "{{composerEndpoint}}phrase",
            "preRequestScript": "",
            "pathVariables": {},
            "method": "GET",
            "data": [],
            "dataMode": "params",
            "version": 2,
            "tests": "",
            "currentHelper": "normal",
            "helperAttributes": {},
            "time": 1429028344572,
            "name": "2- Get all phrases",
            "description": "Retrieves all created phrases",
            "collectionId": "7ab55767-da04-ddc3-d7c4-8b3aea48813d",
            "responses": [],
            "synced": false,
            "owner": 0
        }
    ]
}