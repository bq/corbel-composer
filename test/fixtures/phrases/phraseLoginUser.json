{
	"url": "loginuser",
	"post": {
		"code": "if(!req.body||!req.body.jwt)throw new ComposerError(\"error:jwt:undefined\",\"\",401);var tokenObject;var corbelDriver = corbel.generateDriver({ iamToken : ''}); corbelDriver.iam.token().create({jwt:req.body.jwt}).then(function(e){tokenObject=e.data;corbelDriver=corbel.generateDriver({iamToken:tokenObject});return corbelDriver.iam.user(\"me\").get()}).then(function(e){res.send({tokenObject:tokenObject,user:e.data})})[\"catch\"](function(e){console.log(\"error\",e),res.status(500).send(e)});",
		"doc": {
			"description": "Phrase for login a user using JWT. (claims: `iss`, `aud`, `basic_auth.username`, `basic_auth.password`, `scope`, `exp`)",
			"body": {
				"application/json": {
					"schema": "{\n\t\"$schema\": \"http://json-schema.org/schema\",\n\t\"type\": \"object\",\n\t\"description\": \"CompoSR client login body\",\n\t\"properties\": {\n\t\t\"jwt\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"descrption\": \"JWT Assertion\"\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"jwt\"\n\t]\n}",
					"example": "{\n\t\"jwt\": \"JWT\"\n}"
				}
			},
			"responses": {
				"200": {
					"body": {
						"application/json": {
							"schema": "{\n\t\"$schema\": \"http://json-schema.org/schema\",\n\t\"type\": \"object\",\n\t\"description\": \"CompoSR login response\",\n\t\"properties\": {\n\t\t\"token\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"description\": \"CompoSR login response\",\n\t\t\t\"properties\": {\n\t\t\t\t\"accessToken\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"descrption\": \"accessToken to send in every authorized request\"\n\t\t\t\t},\n\t\t\t\t\"expiresAt\": {\n\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\"descrption\": \"epoch time until token expiration\"\n\t\t\t\t},\n\t\t\t\t\"refreshToken\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"descrption\": \"refreshToken to send to renew an accessToken\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"user\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"description\": \"User object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"firstName\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"User firstName\"\n\t\t\t\t},\n\t\t\t\t\"lastName\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"User lastName\"\n\t\t\t\t},\n\t\t\t\t\"email\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"User email\"\n\t\t\t\t},\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"description\": \"Any custom propierties attached to user\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"required\": [\"token\", \"user\"]\n}",
							"example": "{\n\t\"tokenObject\": {\n\t\t\"accessToken\": \"ACCESS_TOKEN\",\n\t\t\"refreshtoken\": \"REFRESH_TOKEN\",\n\t\t\"expiresAt\": 123123\n\n\t},\n\t\"user\": {\n\t\t\"firstName\": \"First Name\",\n\t\t\"lastName\": \"Last Name\",\n\t\t\"email\": \"email@domain.com\",\n\t\t\"properties\": {}\n\t}\n}"
						}
					}
				},
				"401": {
					"description": "Not authorized",
					"body": {
						"application/json": {
							"schema": "{\n\t\"$schema\": \"http://json-schema.org/schema\",\n\t\"type\": \"object\",\n\t\"description\": \"CompoSR error response\",\n\t\"properties\": {\n\t\t\"httpStatus\": {\n\t\t\t\"type\": \"number\",\n\t\t\t\"descrption\": \"HTTP status code\"\n\t\t},\n\t\t\"error\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"descrption\": \"error code\"\n\t\t},\n\t\t\"errorDescription\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"descrption\": \"Public description\"\n\t\t},\n\t\t\"trace\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"descrption\": \"Development info description\"\n\t\t}\n\t},\n\t\"required\": [\"httpStatus\", \"error\", \"errorDescription\"]\n}",
							"example": "{\n\t\"httpStatus\": 401,\n\t\"error\": \"unauthorized\",\n\t\"errorDescription\": \"\"\n}"
						}
					}
				}
			}
		}
	}
}
