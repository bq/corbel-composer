{
  "url": "logoutuser/:type",
  "post": {
    "code": "if(!req.get(\"Authorization\"))throw new ComposerError(\"error:unauthorized\",\"Authorization missing\",401);var method=req.params.type&&\"all\"===req.params.type?\"disconnect\":\"signOut\";corbelDriver.iam.user(\"me\")[method]().then(function(t){res.send(t.data)})[\"catch\"](function(t){var a=t.status?t.status:500,r=t.data.body&&\"string\"==typeof t.data.body&&-1!==t.data.body.indexOf(\"{\")?JSON.parse(t.data.body):t;res.status(a).send(r)});",
    "doc": {
      "description": "Phrase for login out a user using it's accessToken",
      "queryParameters": {
          "type": {
              "type": "string",
              "description": "Optional param, you can pass 'all' in order to close all the sessions of the user",
              "default": ""
          }
      },
      "headers": {
          "Authorization": {
              "displayName": "Authorization",
              "description": "User access token"
          }
      },
      "responses": {
        "204": {
          "description": "OK"
        },
        "401": {
          "description": "Not authorized",
          "body": {
            "application/json": {
              "schema": "{\n\t\"$schema\": \"http://json-schema.org/schema\",\n\t\"type\": \"object\",\n\t\"description\": \"CompoSR error response\",\n\t\"properties\": {\n\t\t\"httpStatus\": {\n\t\t\t\"type\": \"number\",\n\t\t\t\"descrption\": \"HTTP status code\"\n\t\t},\n\t\t\"error\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"descrption\": \"error code\"\n\t\t},\n\t\t\"errorDescription\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"descrption\": \"Public description\"\n\t\t},\n\t\t\"trace\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"descrption\": \"Development info description\"\n\t\t}\n\t},\n\t\"required\": [\"httpStatus\", \"error\", \"errorDescription\"]\n}",
              "example": "{\n\t\"httpStatus\": 401,\n\t\"error\": \"unauthorized\",\n\t\"errorDescription\": \"\"\n}"
            }
          }
        }
      }
    }
  }
}
